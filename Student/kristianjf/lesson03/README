There are two lockes at the Ballard complex, one small (30 x 150 feet, 8.5 x 45.7 meter) and one large (80 x 825 feet, 24.4 x 251.5 meter).
 Lockes Limitations:
 there are two sets of doors for each locke, one upstream and one down, that cannot both be open at the same time;
 boats need to clear the doors before they are closed and sealed;
 pumps need to be shut down before doors are opened;
 tourists, who can get very close to observe the action, need to be safely managed;
 the lockes themselves can only handle a certain number of boats.

 For this first task you do not need to model every aspect of the lockes, indeed you only need model its operation overall.
 Early on you learn that there will be other software developers interacting with the system and that not everyone is going to remember all the details of using the resources of each component. Your task is to model the use of resources, of system components, as simply as possible. You recognize that with all the operational and sequencing details to be encapsulated, this is a good use case for context managers.

 Write a context manager class Locke to simulate the overall functioning of the system.
 When the locke is entered it stops the pumps, opens the doors, closes the doors, and restarts the pumps.
 Likewise when the locke is exited it runs through the same steps: it stops the pumps, opens the doors, closes the doors, and restarts the pumps.

 During initialization the context manger class accepts the lockeâ€™s capacity in number of boats.
 If someone tries to move too many boats through the locke, anything over its established capacity, raise a suitable error.

 Since this is a simulation you need do nothing more than print what is happening with the doors and pumps, like this:

"Stopping the pumps."
"Opening the doors."
"Closing the doors."
"Restarting the pumps."
