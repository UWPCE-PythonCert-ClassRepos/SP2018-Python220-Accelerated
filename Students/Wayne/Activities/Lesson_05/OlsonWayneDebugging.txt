Last login: Sat Jun  9 12:37:18 on ttys000
Wayne-Olsons-MacBook-Pro:Lesson_05 weepler$ python -m Pdb recursive.py 5
/anaconda3/bin/python: No module named Pdb
Wayne-Olsons-MacBook-Pro:Lesson_05 weepler$ python -m pdb recursive.py 5
> /Users/weepler/SP2018-Python220-Accelerated-master/Students/Wayne/Activities/Lesson_05/recursive.py(1)<module>()
-> import sys
(Pdb) ll
  1  ->	import sys
  2  	
  3  	
  4  	def my_fun(n):
  5  	    if n == 2:
  6  	        return True
  7  	
  8  	    return my_fun(n/2)
  9  	
 10  	if __name__ == '__main__':
 11  	    n = int(sys.argv[1])
 12  	    print(my_fun(n))
(Pdb) n
> /Users/weepler/SP2018-Python220-Accelerated-master/Students/Wayne/Activities/Lesson_05/recursive.py(4)<module>()
-> def my_fun(n):
(Pdb) n
> /Users/weepler/SP2018-Python220-Accelerated-master/Students/Wayne/Activities/Lesson_05/recursive.py(10)<module>()
-> if __name__ == '__main__':
(Pdb) n
> /Users/weepler/SP2018-Python220-Accelerated-master/Students/Wayne/Activities/Lesson_05/recursive.py(11)<module>()
-> n = int(sys.argv[1])
(Pdb) pp n
*** NameError: name 'n' is not defined
(Pdb) n
> /Users/weepler/SP2018-Python220-Accelerated-master/Students/Wayne/Activities/Lesson_05/recursive.py(12)<module>()
-> print(my_fun(n))
(Pdb) n
Traceback (most recent call last):
  File "/anaconda3/lib/python3.6/pdb.py", line 1667, in main
    pdb._runscript(mainpyfile)
  File "/anaconda3/lib/python3.6/pdb.py", line 1548, in _runscript
    self.run(statement)
  File "/anaconda3/lib/python3.6/bdb.py", line 434, in run
    exec(cmd, globals, locals)
  File "<string>", line 1, in <module>
  File "/Users/weepler/SP2018-Python220-Accelerated-master/Students/Wayne/Activities/Lesson_05/recursive.py", line 12, in <module>
    print(my_fun(n))
  File "/Users/weepler/SP2018-Python220-Accelerated-master/Students/Wayne/Activities/Lesson_05/recursive.py", line 8, in my_fun
    return my_fun(n/2)
  File "/Users/weepler/SP2018-Python220-Accelerated-master/Students/Wayne/Activities/Lesson_05/recursive.py", line 8, in my_fun
    return my_fun(n/2)
  File "/Users/weepler/SP2018-Python220-Accelerated-master/Students/Wayne/Activities/Lesson_05/recursive.py", line 8, in my_fun
    return my_fun(n/2)
  [Previous line repeated 980 more times]
  File "/Users/weepler/SP2018-Python220-Accelerated-master/Students/Wayne/Activities/Lesson_05/recursive.py", line 4, in my_fun
    def my_fun(n):
  File "/anaconda3/lib/python3.6/bdb.py", line 53, in trace_dispatch
    return self.dispatch_call(frame, arg)
  File "/anaconda3/lib/python3.6/bdb.py", line 79, in dispatch_call
    if not (self.stop_here(frame) or self.break_anywhere(frame)):
  File "/anaconda3/lib/python3.6/bdb.py", line 176, in break_anywhere
    return self.canonic(frame.f_code.co_filename) in self.breaks
  File "/anaconda3/lib/python3.6/bdb.py", line 32, in canonic
    if filename == "<" + filename[1:-1] + ">":
RecursionError: maximum recursion depth exceeded in comparison
Uncaught exception. Entering post mortem debugging
Running 'cont' or 'step' will restart the program
> /anaconda3/lib/python3.6/bdb.py(32)canonic()
-> if filename == "<" + filename[1:-1] + ">":
(Pdb) n
Post mortem debugger finished. The recursive.py will be restarted
> /Users/weepler/SP2018-Python220-Accelerated-master/Students/Wayne/Activities/Lesson_05/recursive.py(1)<module>()
-> import sys
(Pdb) n
> /Users/weepler/SP2018-Python220-Accelerated-master/Students/Wayne/Activities/Lesson_05/recursive.py(4)<module>()
-> def my_fun(n):
(Pdb) s
> /Users/weepler/SP2018-Python220-Accelerated-master/Students/Wayne/Activities/Lesson_05/recursive.py(10)<module>()
-> if __name__ == '__main__':
(Pdb) n
> /Users/weepler/SP2018-Python220-Accelerated-master/Students/Wayne/Activities/Lesson_05/recursive.py(11)<module>()
-> n = int(sys.argv[1])
(Pdb) n
> /Users/weepler/SP2018-Python220-Accelerated-master/Students/Wayne/Activities/Lesson_05/recursive.py(12)<module>()
-> print(my_fun(n))
(Pdb) n
Traceback (most recent call last):
  File "/anaconda3/lib/python3.6/pdb.py", line 1667, in main
    pdb._runscript(mainpyfile)
  File "/anaconda3/lib/python3.6/pdb.py", line 1548, in _runscript
    self.run(statement)
  File "/anaconda3/lib/python3.6/bdb.py", line 434, in run
    exec(cmd, globals, locals)
  File "<string>", line 1, in <module>
  File "/Users/weepler/SP2018-Python220-Accelerated-master/Students/Wayne/Activities/Lesson_05/recursive.py", line 12, in <module>
    print(my_fun(n))
  File "/Users/weepler/SP2018-Python220-Accelerated-master/Students/Wayne/Activities/Lesson_05/recursive.py", line 8, in my_fun
    return my_fun(n/2)
  File "/Users/weepler/SP2018-Python220-Accelerated-master/Students/Wayne/Activities/Lesson_05/recursive.py", line 8, in my_fun
    return my_fun(n/2)
  File "/Users/weepler/SP2018-Python220-Accelerated-master/Students/Wayne/Activities/Lesson_05/recursive.py", line 8, in my_fun
    return my_fun(n/2)
  [Previous line repeated 980 more times]
  File "/Users/weepler/SP2018-Python220-Accelerated-master/Students/Wayne/Activities/Lesson_05/recursive.py", line 4, in my_fun
    def my_fun(n):
  File "/anaconda3/lib/python3.6/bdb.py", line 53, in trace_dispatch
    return self.dispatch_call(frame, arg)
  File "/anaconda3/lib/python3.6/bdb.py", line 79, in dispatch_call
    if not (self.stop_here(frame) or self.break_anywhere(frame)):
  File "/anaconda3/lib/python3.6/bdb.py", line 176, in break_anywhere
    return self.canonic(frame.f_code.co_filename) in self.breaks
  File "/anaconda3/lib/python3.6/bdb.py", line 32, in canonic
    if filename == "<" + filename[1:-1] + ">":
RecursionError: maximum recursion depth exceeded in comparison
Uncaught exception. Entering post mortem debugging
Running 'cont' or 'step' will restart the program
> /anaconda3/lib/python3.6/bdb.py(32)canonic()
-> if filename == "<" + filename[1:-1] + ">":
(Pdb) n
Post mortem debugger finished. The recursive.py will be restarted
> /Users/weepler/SP2018-Python220-Accelerated-master/Students/Wayne/Activities/Lesson_05/recursive.py(1)<module>()
-> import sys
(Pdb) n
> /Users/weepler/SP2018-Python220-Accelerated-master/Students/Wayne/Activities/Lesson_05/recursive.py(4)<module>()
-> def my_fun(n):
(Pdb) n
> /Users/weepler/SP2018-Python220-Accelerated-master/Students/Wayne/Activities/Lesson_05/recursive.py(10)<module>()
-> if __name__ == '__main__':
(Pdb) n
> /Users/weepler/SP2018-Python220-Accelerated-master/Students/Wayne/Activities/Lesson_05/recursive.py(11)<module>()
-> n = int(sys.argv[1])
(Pdb) n
> /Users/weepler/SP2018-Python220-Accelerated-master/Students/Wayne/Activities/Lesson_05/recursive.py(12)<module>()
-> print(my_fun(n))
(Pdb) s
--Call--
> /Users/weepler/SP2018-Python220-Accelerated-master/Students/Wayne/Activities/Lesson_05/recursive.py(4)my_fun()
-> def my_fun(n):
(Pdb) s
> /Users/weepler/SP2018-Python220-Accelerated-master/Students/Wayne/Activities/Lesson_05/recursive.py(5)my_fun()
-> if n == 2:
(Pdb) pp n
5
(Pdb) ll
  4  	def my_fun(n):
  5  ->	    if n == 2:
  6  	        return True
  7  	
  8  	    return my_fun(n/2)
(Pdb) n
> /Users/weepler/SP2018-Python220-Accelerated-master/Students/Wayne/Activities/Lesson_05/recursive.py(8)my_fun()
-> return my_fun(n/2)
(Pdb) pp n
5
(Pdb) n
Traceback (most recent call last):
  File "/anaconda3/lib/python3.6/pdb.py", line 1667, in main
    pdb._runscript(mainpyfile)
  File "/anaconda3/lib/python3.6/pdb.py", line 1548, in _runscript
    self.run(statement)
  File "/anaconda3/lib/python3.6/bdb.py", line 434, in run
    exec(cmd, globals, locals)
  File "<string>", line 1, in <module>
  File "/Users/weepler/SP2018-Python220-Accelerated-master/Students/Wayne/Activities/Lesson_05/recursive.py", line 12, in <module>
    print(my_fun(n))
  File "/Users/weepler/SP2018-Python220-Accelerated-master/Students/Wayne/Activities/Lesson_05/recursive.py", line 8, in my_fun
    return my_fun(n/2)
  File "/Users/weepler/SP2018-Python220-Accelerated-master/Students/Wayne/Activities/Lesson_05/recursive.py", line 8, in my_fun
    return my_fun(n/2)
  File "/Users/weepler/SP2018-Python220-Accelerated-master/Students/Wayne/Activities/Lesson_05/recursive.py", line 8, in my_fun
    return my_fun(n/2)
  [Previous line repeated 980 more times]
  File "/Users/weepler/SP2018-Python220-Accelerated-master/Students/Wayne/Activities/Lesson_05/recursive.py", line 4, in my_fun
    def my_fun(n):
  File "/anaconda3/lib/python3.6/bdb.py", line 53, in trace_dispatch
    return self.dispatch_call(frame, arg)
  File "/anaconda3/lib/python3.6/bdb.py", line 79, in dispatch_call
    if not (self.stop_here(frame) or self.break_anywhere(frame)):
  File "/anaconda3/lib/python3.6/bdb.py", line 176, in break_anywhere
    return self.canonic(frame.f_code.co_filename) in self.breaks
  File "/anaconda3/lib/python3.6/bdb.py", line 32, in canonic
    if filename == "<" + filename[1:-1] + ">":
RecursionError: maximum recursion depth exceeded in comparison
Uncaught exception. Entering post mortem debugging
Running 'cont' or 'step' will restart the program
> /anaconda3/lib/python3.6/bdb.py(32)canonic()
-> if filename == "<" + filename[1:-1] + ">":
(Pdb) n
Post mortem debugger finished. The recursive.py will be restarted
> /Users/weepler/SP2018-Python220-Accelerated-master/Students/Wayne/Activities/Lesson_05/recursive.py(1)<module>()
-> import sys
(Pdb) n
> /Users/weepler/SP2018-Python220-Accelerated-master/Students/Wayne/Activities/Lesson_05/recursive.py(4)<module>()
-> def my_fun(n):
(Pdb) s
> /Users/weepler/SP2018-Python220-Accelerated-master/Students/Wayne/Activities/Lesson_05/recursive.py(10)<module>()
-> if __name__ == '__main__':
(Pdb) n
> /Users/weepler/SP2018-Python220-Accelerated-master/Students/Wayne/Activities/Lesson_05/recursive.py(11)<module>()
-> n = int(sys.argv[1])
(Pdb) n
> /Users/weepler/SP2018-Python220-Accelerated-master/Students/Wayne/Activities/Lesson_05/recursive.py(12)<module>()
-> print(my_fun(n))
(Pdb) s
--Call--
> /Users/weepler/SP2018-Python220-Accelerated-master/Students/Wayne/Activities/Lesson_05/recursive.py(4)my_fun()
-> def my_fun(n):
(Pdb) s
> /Users/weepler/SP2018-Python220-Accelerated-master/Students/Wayne/Activities/Lesson_05/recursive.py(5)my_fun()
-> if n == 2:
(Pdb) ll
  4  	def my_fun(n):
  5  ->	    if n == 2:
  6  	        return True
  7  	
  8  	    return my_fun(n/2)
(Pdb) n
> /Users/weepler/SP2018-Python220-Accelerated-master/Students/Wayne/Activities/Lesson_05/recursive.py(8)my_fun()
-> return my_fun(n/2)
(Pdb) pp n
5
(Pdb) ?

Documented commands (type help <topic>):
========================================
EOF    c          d        h         list      q        rv       undisplay
a      cl         debug    help      ll        quit     s        unt      
alias  clear      disable  ignore    longlist  r        source   until    
args   commands   display  interact  n         restart  step     up       
b      condition  down     j         next      return   tbreak   w        
break  cont       enable   jump      p         retval   u        whatis   
bt     continue   exit     l         pp        run      unalias  where    

Miscellaneous help topics:
==========================
exec  pdb

(Pdb) ll
  1  ->	import sys
  2  	
  3  	
  4  	def my_fun(n):
  5  	    if n == 2:
  6  	        return True
  7  	
  8  	    return my_fun(n/2)
  9  	
 10  	if __name__ == '__main__':
 11  	    n = int(sys.argv[1])
 12  	    print(my_fun(n))
(Pdb) n
> /Users/weepler/SP2018-Python220-Accelerated-master/Students/Wayne/Activities/Lesson_05/recursive.py(4)<module>()
-> def my_fun(n):
(Pdb) s
> /Users/weepler/SP2018-Python220-Accelerated-master/Students/Wayne/Activities/Lesson_05/recursive.py(10)<module>()
-> if __name__ == '__main__':
(Pdb) s
> /Users/weepler/SP2018-Python220-Accelerated-master/Students/Wayne/Activities/Lesson_05/recursive.py(11)<module>()
-> n = int(sys.argv[1])
(Pdb) s
> /Users/weepler/SP2018-Python220-Accelerated-master/Students/Wayne/Activities/Lesson_05/recursive.py(12)<module>()
-> print(my_fun(n))
(Pdb) s
--Call--
> /Users/weepler/SP2018-Python220-Accelerated-master/Students/Wayne/Activities/Lesson_05/recursive.py(4)my_fun()
-> def my_fun(n):
(Pdb) s
> /Users/weepler/SP2018-Python220-Accelerated-master/Students/Wayne/Activities/Lesson_05/recursive.py(5)my_fun()
-> if n == 2:
(Pdb) ll
  4  	def my_fun(n):
  5  ->	    if n == 2:
  6  	        return True
  7  	
  8  	    return my_fun(n/2)
(Pdb) n
> /Users/weepler/SP2018-Python220-Accelerated-master/Students/Wayne/Activities/Lesson_05/recursive.py(8)my_fun()
-> return my_fun(n/2)
(Pdb) s
--Call--
> /Users/weepler/SP2018-Python220-Accelerated-master/Students/Wayne/Activities/Lesson_05/recursive.py(4)my_fun()
-> def my_fun(n):
(Pdb) n
> /Users/weepler/SP2018-Python220-Accelerated-master/Students/Wayne/Activities/Lesson_05/recursive.py(5)my_fun()
-> if n == 2:
(Pdb) pp n
2.5
(Pdb) ll
  4  	def my_fun(n):
  5  ->	    if n == 2:
  6  	        return True
  7  	
  8  	    return my_fun(n/2)
(Pdb) n
> /Users/weepler/SP2018-Python220-Accelerated-master/Students/Wayne/Activities/Lesson_05/recursive.py(8)my_fun()
-> return my_fun(n/2)
(Pdb) s
--Call--
> /Users/weepler/SP2018-Python220-Accelerated-master/Students/Wayne/Activities/Lesson_05/recursive.py(4)my_fun()
-> def my_fun(n):
(Pdb) pp n
1.25
(Pdb) ll
  4  ->	def my_fun(n):
  5  	    if n == 2:
  6  	        return True
  7  	
  8  	    return my_fun(n/2)
(Pdb) n
> /Users/weepler/SP2018-Python220-Accelerated-master/Students/Wayne/Activities/Lesson_05/recursive.py(5)my_fun()
-> if n == 2:
(Pdb) n
> /Users/weepler/SP2018-Python220-Accelerated-master/Students/Wayne/Activities/Lesson_05/recursive.py(8)my_fun()
-> return my_fun(n/2)
(Pdb) s
--Call--
> /Users/weepler/SP2018-Python220-Accelerated-master/Students/Wayne/Activities/Lesson_05/recursive.py(4)my_fun()
-> def my_fun(n):
(Pdb) c
Traceback (most recent call last):
  File "/anaconda3/lib/python3.6/pdb.py", line 1667, in main
    pdb._runscript(mainpyfile)
  File "/anaconda3/lib/python3.6/pdb.py", line 1548, in _runscript
    self.run(statement)
  File "/anaconda3/lib/python3.6/bdb.py", line 434, in run
    exec(cmd, globals, locals)
  File "<string>", line 1, in <module>
  File "/Users/weepler/SP2018-Python220-Accelerated-master/Students/Wayne/Activities/Lesson_05/recursive.py", line 12, in <module>
    print(my_fun(n))
  File "/Users/weepler/SP2018-Python220-Accelerated-master/Students/Wayne/Activities/Lesson_05/recursive.py", line 8, in my_fun
    return my_fun(n/2)
  File "/Users/weepler/SP2018-Python220-Accelerated-master/Students/Wayne/Activities/Lesson_05/recursive.py", line 8, in my_fun
    return my_fun(n/2)
  File "/Users/weepler/SP2018-Python220-Accelerated-master/Students/Wayne/Activities/Lesson_05/recursive.py", line 8, in my_fun
    return my_fun(n/2)
  File "/Users/weepler/SP2018-Python220-Accelerated-master/Students/Wayne/Activities/Lesson_05/recursive.py", line 4, in my_fun
    def my_fun(n):
  File "/Users/weepler/SP2018-Python220-Accelerated-master/Students/Wayne/Activities/Lesson_05/recursive.py", line 8, in my_fun
    return my_fun(n/2)
  File "/Users/weepler/SP2018-Python220-Accelerated-master/Students/Wayne/Activities/Lesson_05/recursive.py", line 8, in my_fun
    return my_fun(n/2)
  File "/Users/weepler/SP2018-Python220-Accelerated-master/Students/Wayne/Activities/Lesson_05/recursive.py", line 8, in my_fun
    return my_fun(n/2)
  [Previous line repeated 982 more times]
  File "/Users/weepler/SP2018-Python220-Accelerated-master/Students/Wayne/Activities/Lesson_05/recursive.py", line 5, in my_fun
    if n == 2:
RecursionError: maximum recursion depth exceeded in comparison
Uncaught exception. Entering post mortem debugging
Running 'cont' or 'step' will restart the program
> /Users/weepler/SP2018-Python220-Accelerated-master/Students/Wayne/Activities/Lesson_05/recursive.py(5)my_fun()
-> if n == 2: